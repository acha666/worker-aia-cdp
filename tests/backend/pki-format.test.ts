/// <reference types="node" />

import assert from "node:assert/strict";
import { readFile } from "node:fs/promises";
import { test } from "node:test";

import { decimalFromHex, sha256Hex, toHex } from "../../src/pki/format";

const CERT_DER_URL = new URL("../fixtures/test-leaf.cert.der", import.meta.url);

const CERT_SHA256 = "e952f0166f37f68dbb3c020e2bd105ca66dcb00d4bae1a81a96ae8f49ce491f3";
const CERT_SERIAL_HEX = "0A46A242EAF2D833B7552DA70D66D81D435123A9";
const CERT_SERIAL_DEC = "58665094833392972755419431325433790933314380713";

test("sha256Hex matches the digest generated by openssl", async () => {
  const certBytes = await readFile(CERT_DER_URL);
  const digest = await sha256Hex(certBytes);
  assert.equal(digest, CERT_SHA256);
});

test("toHex converts binary to lower-case hex", () => {
  const bytes = new Uint8Array([0x0a, 0x46, 0xa2]);
  assert.equal(toHex(bytes), "0a46a2");
});

test("decimalFromHex converts serial numbers from hex", () => {
  const decimal = decimalFromHex(CERT_SERIAL_HEX);
  assert.equal(decimal, CERT_SERIAL_DEC);
});

test("decimalFromHex returns null on invalid input", () => {
  assert.equal(decimalFromHex("not-hex"), null);
  assert.equal(decimalFromHex(null), null);
});
